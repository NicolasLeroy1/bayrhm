// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// simulate_Z_lambda_horseshoe_cpp
int simulate_Z_lambda_horseshoe_cpp(const arma::vec& y, Rcpp::List& Z, double mu, Rcpp::List& lambda, const Rcpp::List& W2, double sigma2, double tau2, const Rcpp::List& V_list, const Rcpp::List& D_list, arma::vec& residuals);
RcppExport SEXP _bayrhm_simulate_Z_lambda_horseshoe_cpp(SEXP ySEXP, SEXP ZSEXP, SEXP muSEXP, SEXP lambdaSEXP, SEXP W2SEXP, SEXP sigma2SEXP, SEXP tau2SEXP, SEXP V_listSEXP, SEXP D_listSEXP, SEXP residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type tau2(tau2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type V_list(V_listSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type D_list(D_listSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type residuals(residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_Z_lambda_horseshoe_cpp(y, Z, mu, lambda, W2, sigma2, tau2, V_list, D_list, residuals));
    return rcpp_result_gen;
END_RCPP
}
// simulate_Z_lambda_fusion_cpp
int simulate_Z_lambda_fusion_cpp(const arma::vec& y, Rcpp::List& Z, double mu, Rcpp::List& lambda, const Rcpp::List& W2, const Rcpp::List& Omega2, double sigma2, double tauO2, const Rcpp::List& V_list, const Rcpp::List& D_list, arma::vec& residuals);
RcppExport SEXP _bayrhm_simulate_Z_lambda_fusion_cpp(SEXP ySEXP, SEXP ZSEXP, SEXP muSEXP, SEXP lambdaSEXP, SEXP W2SEXP, SEXP Omega2SEXP, SEXP sigma2SEXP, SEXP tauO2SEXP, SEXP V_listSEXP, SEXP D_listSEXP, SEXP residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type Omega2(Omega2SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type tauO2(tauO2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type V_list(V_listSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type D_list(D_listSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type residuals(residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_Z_lambda_fusion_cpp(y, Z, mu, lambda, W2, Omega2, sigma2, tauO2, V_list, D_list, residuals));
    return rcpp_result_gen;
END_RCPP
}
// simulate_Z_lambda_fused_cpp
int simulate_Z_lambda_fused_cpp(const arma::vec& y, Rcpp::List& Z, double mu, Rcpp::List& lambda, const Rcpp::List& W2, const Rcpp::List& Omega2, double sigma2, double tauO2, const Rcpp::List& V_list, const Rcpp::List& D_list, arma::vec& residuals);
RcppExport SEXP _bayrhm_simulate_Z_lambda_fused_cpp(SEXP ySEXP, SEXP ZSEXP, SEXP muSEXP, SEXP lambdaSEXP, SEXP W2SEXP, SEXP Omega2SEXP, SEXP sigma2SEXP, SEXP tauO2SEXP, SEXP V_listSEXP, SEXP D_listSEXP, SEXP residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type Omega2(Omega2SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type tauO2(tauO2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type V_list(V_listSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type D_list(D_listSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type residuals(residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_Z_lambda_fused_cpp(y, Z, mu, lambda, W2, Omega2, sigma2, tauO2, V_list, D_list, residuals));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bayrhm_simulate_Z_lambda_horseshoe_cpp", (DL_FUNC) &_bayrhm_simulate_Z_lambda_horseshoe_cpp, 10},
    {"_bayrhm_simulate_Z_lambda_fusion_cpp", (DL_FUNC) &_bayrhm_simulate_Z_lambda_fusion_cpp, 11},
    {"_bayrhm_simulate_Z_lambda_fused_cpp", (DL_FUNC) &_bayrhm_simulate_Z_lambda_fused_cpp, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayrhm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
